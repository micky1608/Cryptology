
import math

def isprime(x):
    for i in range(2, x-1):
        if x % i == 0:
            return False
    else:
        return True

def extended_euclidean_it(a, b):
    x0, x1, y0, y1 = 0, 1, 1, 0
    while a != 0:
        q, b, a = b // a, a, b % a
        y0, y1 = y1, y0 - q * y1
        x0, x1 = x1, x0 - q * x1
    return x0, y0

a = 301182469496072558053649268221007074645868627541771094072381796795922848019173071302554460108223142819220714339320215019365055594817280916694322939695107884588309281623331688345742391456305508403085581265162654219052750991816967228775937240486335733354240264008043837115251088297239899300285813657421931330268132776044187067187772562475265224094852972318864728313762936267527278049953276934345948344230217673246317419164536308319371120140053162410464296346053542628876196687535081430724529929492408964201514889246855170400221927146003772594643969049036387066001061303502754526886870274014523202978619719517004044968610984689174066536836503615318844731827020488694743036636291611212823008294395485909073641354122328937023493522438759593134877678964301656995671737775962935688517638490333441034736486734254146907700769556821604688788484456631535610866984834127493332025225572047510182428331715382693938410660723666461893494009410339340760850242090564704061976930730519562708826672357549858889932964822988042868207921917441001274081397132575629936272864129811279703513636254578379438238326700674279388990778631923432987776987365716226728546932740142609237483936325637972442326697942235918482133848853829647702517218092150036117358795553
b = 142914665529351415062452127531912865883835273746357198541426637475653531711856948969567448646523370458636823662792327705612148117727717251184376606273477969701976314799695011978444071385645474318456343208245970499137558222991561620844097033902289808500353968394621603368025438386124812646877065761871669441330924685186266709280941437005739938690832398377868714510642165881515224782828128402561416849323908494607014925929267501790921108230219329614822585212086266514782345323106974749453756268919630425518041206208164178953302126477128355305069491111153711127262281235990830378313085743057007529156127120765632381469825905133419484510999683248241518411265923323394448729668303047065237028809101999534177500815041096610679884035701273750894888699921972024677408450274961257779477780143229210430951720900250094470380193504176822564348658409094130102802014449439279100200032976307395026256297122357571144508163089893934908600293497503625543477535553496937765971565336017341335358164981445816653436448329235213689940714419017308389401370757516513992590428125102695201162907806313407392932485954429476458159148456158984843607294393172779259662359002187071320206847942565963106224943872567821230372633894836497242528857591982377478013712751
n = 311331534736971866693552718985195784480021792005886904930444448445651817595641630923827418349270407162282016184893928531237914017703144535371612360816997273171020552036194599745749936010793879390206374105449808092046122988063145913731377451718489079450489344324839792062998984987528099952909229443575107489943726257088350882067718597226910019218387363669879430933219501764636972881356287753531380711966126829730720287826339843169936078656774759309258233367246951448147148760228728888899806028439656632536470532929921235117718823710753133464389488112239580642344232410162715335902659001826021895518780446057836467173815973521089974020613212604422482515310679888569818766856472780100778825247051272857072832097586003039689962016777536012762175832753416729126735529581584014210541206975294772250762288962909480456993766819071294578077381745681349714279339952657341072428889038136683837248327915367301714496569608190665521070614298928049783091044122417435622327434100006636331947069353680589257430190502766065007671295350438338649873939629724357432675094210890018709223988874298444415918099078230670948043109770298108263163890458050392262644081080766264531648036208592154411655726210182162436833706862655130394596480153153100389233244218


# Solve Ax+b=0 mod n when n is prime

u,v = extended_euclidean_it(a , n)

print("verif : " , (a*u)%n)

print("System solution : " , (u*(-b))%n)



